<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">


	<context:component-scan base-package="com.gbcom.update.*.controller"/>
	<!-- To enable @RequestMapping process on type level and method level -->
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />



	<!-- 视图解析器，根据视图的名称new ModelAndView(name)，在配置文件查找对应的bean配置   JSP template-->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="mediaTypes">
		    <map>
		        <entry key="xml" value="application/xml"/>
		        <entry key="html" value="text/html"/>
		    </map>
		</property>
		<property name="viewResolvers">
		    <list>
		        <bean class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
		        <bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
					<property name="prefix" value="/"/>
					<property name="suffix" value=".jsp"/>
				</bean>
		    </list>
		</property>
	</bean>
	
			<!-- xml视图,Jaxb2Marshaller,需要配置对象和对象添加Annotation xml注解--><!--
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="classesToBeBound">
			<list>
				<value>com.gbcom.ccsv3.common.bean.Employee</value>
				<value>com.gbcom.ccsv3.common.bean.EmployeeList</value>
			</list>
		</property>
	</bean>
	<bean id="employees" class="org.springframework.web.servlet.view.xml.MarshallingView">
		<constructor-arg ref="jaxbMarshaller" />
	</bean>
	--><!-- xml视图，XStreamMarshaller，可以转换任何形式的java对象，需要添加xStream jar包 -->
	<!--<bean name="xStreamMarshallingView" class="org.springframework.web.servlet.view.xml.MarshallingView">
	    <property name="marshaller">
	        <bean class="org.springframework.oxm.xstream.XStreamMarshaller">  
	               <property name="autodetectAnnotations" value="true"/>  
	            <property name="aliases">
	                <map>
	                    <entry key="myBeans" value="com.gbcom.ccsv3.common.bean.AccountBean"/>
	                </map>
	            </property>
	            <property name="fieldAliases">
	                <map>
	                    <entry key="com.gbcom.ccsv3.common.bean.AccountBean.brithday" value="生日"/>
	                </map>
	            </property>
	           </bean>  
	    </property>
	</bean>

  
	
	--><!-- JSON view   ,jsck son ,. MappingJacksonView -->
	<bean name="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
	    <property name="encoding">
	        <value type="org.codehaus.jackson.JsonEncoding">UTF8</value>
	    </property>
	    <property name="contentType" value="text/html;charset=UTF-8"/>
	</bean>
	
	<!--bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" /--><!--
	<bean id="employeeController" class="com.gbcom.ccsv3.northful.EmployeeController">
		<property name="employeeDS" ref="employeeDS" />
		<property name="jaxb2Mashaller" ref="jaxbMarshaller" />
	</bean>
	
--></beans>