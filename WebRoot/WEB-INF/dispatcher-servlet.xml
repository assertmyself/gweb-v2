<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd "
       default-autowire="byName">

    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd -->
    <!--<mvc:resources mapping="/img/**" location="/img/"/>-->
    <!--<mvc:resources mapping="/js/**" location="/js/"/>-->
    <!--<mvc:resources mapping="/css/**" location="/css/"/>-->
    <!-- <mvc:resources mapping="/html/**" location="/html/"/>  -->
    <!--<mvc:default-servlet-handler/>-->
    <!-- Controller的包，使容器启动的时候可以找的并实例化Controller -->
    <context:component-scan base-package="com.gbcom.system.controller"/>
    <context:component-scan base-package="com.gbcom.demo.controller"/>

    <context:component-scan base-package="com.gbcom.update.client.controller"/>
    
    
   	<aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="logAspect" class="com.gbcom.system.aop.LogAspect" />
    

 

    <!-- 默认的注解映射的支持 --><!--  
    <mvc:annotation-driven />    会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean
    --><!-- ControllerClassNameHandlerMapping用于匹配我们的Controller -->
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <property name="caseSensitive" value="true"/>
    </bean>

    <!-- 文件上传支持Bean -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--<property name="maxUploadSize" value="20480000"/>-->
        <!--最大文件不能超过1GB-->
        <property name="maxUploadSize" value="1073741824"/>
    </bean>

    <!--Method Mapping -->
    <bean id="methodNameResolver"
          class="org.springframework.web.servlet.mvc.multiaction.InternalPathMethodNameResolver"/>

<!-- 全局异常 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    
	    <property name="defaultErrorView" value="error"></property>  
	    <property name="exceptionAttribute" value="ex"></property>   
    
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">suberror</prop>
                <prop key="org.springframework.transaction.TransactionException">suberror</prop>
                <prop key="java.sql.SQLException">suberror</prop>
                <prop key="java.lang.RuntimeException">suberror</prop>
            </props>
        </property>
        <!-- 
        输出全局日志
        <property name="warnLogCategory">    
        <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>  
        </property>
    --></bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/"
          p:suffix=".jsp"/><!--
         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />  
-->


</beans>